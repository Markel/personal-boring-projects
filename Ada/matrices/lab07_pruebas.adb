----------------------------------------------------------------------------------------
-- Leyenda => V: Test correcto ; X: Test fallido ; E: Programa no implementado;        |
-- S: Semi-mal                                                                         |
----------------------------------------------------------------------------------------

WITH Laboratorio07b, Ada.Text_IO, Ada.Integer_Text_IO, Ada.Float_Text_IO, Ada.Exceptions;
 USE Laboratorio07b, Ada.Text_IO, Ada.Integer_Text_IO, Ada.Float_Text_IO, Ada.Exceptions;

procedure lab07_pruebas IS
  v, x: Natural := 0;
  hay_exclamaciones: Boolean := false;
  procedure red IS begin Put(ASCII.ESC & "[31m"); end red;
  procedure green IS begin Put(ASCII.ESC & "[32m"); end green;
  procedure yellow IS begin Put(ASCII.ESC & "[33m"); end yellow;
  procedure white IS begin Put(ASCII.ESC & "[00m"); end white;
  procedure underscore IS begin Put(ASCII.ESC & "[04m"); end underscore;
  procedure end_credits(aciertos, fallos: in Natural) IS begin New_Line;Put(aciertos,0);if aciertos/=1 then Put(" exitos, ");else Put(" exito, ");end if;Put(fallos,0);if fallos/=1 then Put(" fallos (");else Put(" fallo (");end if;if fallos/=0 then Put(aciertos*100/(aciertos+fallos), 0);Put("%).");else underscore;Put(aciertos*100/(aciertos+fallos), 0);Put("%");white;Put(").");end if;New_Line;if hay_exclamaciones then Put("Resultados con ! en el titulo pueden contener falsos negativos.");end if;end end_credits;

  type Int_Array_Decl  is array (Integer range <>) of Integer;
  type Flo_Array_Decl  is array (Integer range <>) of Float;
  type Bool_Array_Decl is array (Integer range <>) of Boolean;
  type Polar_Array_Decl is array (Integer range <>) of T_Complejo_Polar;
  type Tri_Array_Decl is array (Integer range <>) of T_Complejo_Tri;
  type Fecha_array_Decl is array (Integer range <>) of T_Fecha;
  type Carreteras_array_Decl is array (Integer range <>) of T_Estatica_Carreteras;
  type Puntos_array_decl is array (Integer range <>) of T_Estatica_Puntos;
  type Fichas_array_decl is array (Integer range <>) of T_Ficha;
  type puzle_array_decl is array (Integer range <>) of T_Puzle;
  type Urbanizacion_array_decl is array (Integer range <>) of T_Urbanizacion;
  
  --Int_5, Int_5_R_1, Int_5_R_2, Int_5_R_3: Int_Array_Decl (1..5);
  --Int_8 : Int_Array_Decl(1..8);
  --Flo_5: Flo_Array_Decl(1..5);
  Bool_4_R  : Bool_Array_Decl (1..4);
  --Bool_8_R  : Bool_Array_Decl (1..8);
  Int_3_R : Int_Array_Decl (1..3);
  Int_4, Int_4_1, Int_4_R, Int_4_R_1 : Int_Array_Decl (1..4);
  Polar_9 : Polar_Array_Decl (1..9);
  Tri_9_R : Tri_Array_Decl (1..9);
  Fecha_8, Fecha_8_R : Fecha_array_Decl (1..8);
  Fecha_5, Fecha_5_1, Fecha_5_R : Fecha_array_Decl (1..5);
  Carreteras_2, Carreteras_2_R_sin_peajes, Carreteras_2_R_peajes, Carreteras_2_R_Sin_Puntos : Carreteras_array_Decl (1..2);
  Puntos_10, Puntos_10_R : Puntos_array_decl (1..10);
  Ficha_3, Ficha_3_R: Fichas_array_decl (1..3);
  Ficha_4 : Fichas_array_decl (1..4);
  T_Puzle_4: puzle_array_decl (1..4);
  Urba_3 : Urbanizacion_array_decl (1..3);

  int_v1, int_v2: Integer;
  bool_v1 : Boolean;
  Tri_v1 : T_Complejo_Tri;
  Fecha_v1 : T_Fecha;
  Puvli : T_Datos_Pluviometricos;
  Estatica_carre : T_Estatica_Carreteras;
  --Carre: V_Carreteras(1..Max_Carreteras);

BEGIN
  ------------
  -- Trigon --
  ------------
  Put("Trigon: ");
  -- Casos de prueba
  Polar_9 := ((2.0,2.0),
              (5.3, 9.1),
              (-6.0, 2.0),
              (5.0, -3.2),
              (-6.0, -2.0),
              (0.0, 30.0),
              (12.0, 0.0),
              (0.0, 0.0),
              (25.6, 27.5));
  Tri_9_R := ((-083.0,182.0), (-502.0, 169.0), (250.0, -546.0), (-499.0, 029.0), (250.0, 546.0), (00.0, 00.0), (1200.0, 00.0), (00.0, 00.0), (-1830.0, 1790.0));
  -- Test
  --* Las cosas están en integer porque Ada y los floats son gilipollas.com
  for i in Polar_9'range loop
    begin
      Tri_v1 := Trigon(Polar_9(i));
      if Integer(Tri_v1.A * 100.0) = Integer(Tri_9_R(i).A) and Integer(Tri_v1.B * 100.0) = Integer(Tri_9_R(i).B) then
        green; Put("V"); v:=v+1;
      elsif Integer(Tri_v1.A * 100.0) = Integer(Tri_9_R(i).A) or Integer(Tri_v1.B * 100.0) = Integer(Tri_9_R(i).B) then
        yellow; Put("S"); x:=x+1;
      else 
        red; Put("X"); x:=x+1;
      end if;
    exception
      when Error: Program_Error => red; Put("E"); x:=x+1;
      when Error: others => red; Put(Exception_Information(Error)); x:=x+1;
    end;
  end loop;
  -- Finish
  white; New_Line;

  -------------------
  -- Dia_Siguiente --
  -------------------
  Put("Dia Siguiente: ");
  -- Casos de prueba
  Fecha_8 := ((5,mayo,2020),
              (31,diciembre,2020),
              (30,noviembre,2020),
              (28,febrero,2000),
              (28,febrero,1900),
              (28,febrero,1992),
              (28,febrero,2002),
              (29,febrero,2000));
  Fecha_8_R  := ((6,mayo,2020),(1,enero,2021),(1,diciembre,2020),(29,febrero,2000),(1,marzo,1900),(29,febrero,1992),(1,marzo,2002),(1,marzo,2000));
  -- Test
  for i in Fecha_8'range loop
    begin
      Dia_Siguiente(Fecha_8(i));
      if Fecha_8(i) = Fecha_8_R(i) then
        green; Put("V"); v:=v+1;
      else 
        red; Put("X"); x:=x+1;
        -- Put(Fecha_8(i).Dia);
        -- Put(T_Mes'Image(Fecha_8(i).Mes));
        -- Put(Fecha_8(i).Anno);
      end if;
    exception
      when Error: Program_Error => red; Put("E"); x:=x+1;
      when Error: others => red; Put(Exception_Information(Error)); x:=x+1;
    end;
  end loop;
  -- Finish
  white; New_Line;

  ------------
  -- Maximo --
  ------------
  Put("Maximo: ");
  -- Casos de prueba (el último no lo he comprobado manualmente, con lo que puede que de mal)
  --* Datos bonitos: https://pastebin.com/jMs4yemg (gracias R por la ayuda con este ejercicio)
  Puvli := (((26,10,9,24,36,32,49,26,9,2,9,0,28,15,42,45,8,20,33,38,42,12,32,12,8,39,24,25,46,1,26,others=>542),(47,39,3,32,16,30,50,38,26,18,36,19,1,30,48,14,27,22,3,32,21,17,14,28,4,21,33,12,others=>542),(49,15,1,7,50,16,30,32,31,20,11,15,42,16,45,31,30,18,31,50,48,18,24,16,33,14,43,26,28,18,6,others=>542),(28,28,36,29,38,0,37,47,13,25,6,2,25,44,12,5,39,20,42,9,17,9,16,45,46,27,50,17,23,8,others=>542),(6,28,17,29,37,44,48,44,7,4,11,50,12,20,35,44,0,10,40,36,22,40,50,40,16,23,39,39,38,50,44,others=>542),(19,34,33,30,1,34,8,5,46,50,3,0,50,15,10,42,44,23,40,2,33,45,32,18,19,5,8,22,24,29,others=>542),(50,44,30,26,14,26,11,16,39,39,50,42,21,45,16,49,42,10,27,29,32,32,39,6,13,6,24,7,16,24,7,others=>542),(27,0,49,31,3,15,15,9,47,16,35,17,38,10,21,32,39,14,27,9,13,13,37,38,25,23,15,20,33,42,6,others=>542),(22,37,11,41,42,33,11,38,46,38,47,34,24,10,36,38,5,3,30,28,24,37,46,5,39,15,35,4,21,23,others=>542),(50,0,15,15,6,34,35,43,10,17,20,0,42,1,9,20,49,9,21,8,36,32,33,27,34,49,24,14,6,27,4,others=>542),(43,21,24,14,17,29,14,14,47,29,43,46,10,2,25,40,24,18,7,40,28,14,2,19,5,38,49,42,24,35,others=>542),(18,4,34,50,34,41,22,12,12,31,36,30,16,9,36,4,41,32,8,32,43,30,35,34,9,36,15,34,40,33,13,others=>542)),((49,19,46,31,21,16,14,6,4,17,19,13,30,15,10,11,5,20,28,4,37,46,12,36,37,43,13,33,5,49,12,others=>542),(28,5,8,22,36,48,39,14,37,37,9,31,5,31,32,18,41,18,2,11,50,32,0,33,17,12,13,7,others=>542),(12,47,9,30,33,9,19,27,35,29,0,50,49,2,37,37,40,22,37,8,22,48,32,25,38,13,49,49,49,26,23,others=>542),(23,22,17,7,19,8,48,10,39,10,43,2,46,0,40,4,47,47,48,34,49,49,12,42,8,14,8,0,37,32,others=>542),(48,39,1,29,16,49,16,44,50,35,43,23,48,11,21,1,6,43,20,49,25,17,14,45,45,35,29,13,46,14,40,others=>542),(42,20,26,21,30,3,13,42,5,34,13,6,32,24,25,43,47,35,8,8,24,19,1,12,14,44,8,41,11,50,others=>542),(40,27,19,40,12,21,46,33,15,45,29,21,43,32,3,10,26,31,26,30,13,50,20,36,25,10,24,23,42,18,7,others=>542),(0,4,24,43,41,39,11,39,44,35,40,32,4,12,14,49,32,24,47,22,34,21,9,8,37,49,50,41,44,24,28,others=>542),(1,36,42,29,38,9,47,40,50,37,7,33,28,12,34,32,32,30,6,16,15,36,34,38,24,38,14,18,37,50,others=>542),(4,26,18,29,13,35,23,20,14,48,15,5,32,49,42,50,21,5,20,31,18,47,46,2,4,12,28,27,37,42,44,others=>542),(8,15,41,9,36,13,39,45,1,20,28,48,36,5,42,31,29,1,13,1,25,8,14,35,16,22,1,46,44,27,others=>542),(22,11,13,26,1,34,44,6,45,7,17,45,13,14,18,7,41,10,14,49,28,28,18,41,39,36,2,38,20,43,2,others=>542)),((7,36,25,43,41,2,37,5,1,50,5,32,19,23,7,13,40,39,50,50,23,22,3,47,23,36,35,35,23,23,18,others=>542),(41,43,29,27,36,45,35,43,44,27,40,23,40,30,20,5,50,14,11,0,19,19,25,41,2,27,21,10,others=>542),(40,13,40,7,37,40,44,16,20,45,5,6,10,16,7,39,24,32,41,32,7,19,30,25,36,6,34,36,6,30,8,others=>542),(34,32,21,14,48,4,47,42,12,13,24,40,22,18,4,50,49,43,44,18,4,41,15,3,0,3,13,50,47,48,others=>542),(16,34,40,50,29,13,8,19,27,23,6,17,3,42,35,2,8,12,50,32,10,28,48,23,33,33,6,2,19,40,46,others=>542),(48,10,50,28,29,48,47,33,16,47,14,35,15,2,19,21,45,47,34,46,24,26,2,1,7,12,44,47,32,48,others=>542),(32,3,18,31,16,31,8,25,45,22,46,17,25,35,48,44,1,30,7,9,29,1,39,10,18,4,0,26,29,50,3,others=>542),(14,20,12,16,48,49,44,25,39,3,34,22,30,29,25,36,18,9,15,43,46,11,16,8,3,21,20,43,30,18,17,others=>542),(13,44,50,37,44,31,46,0,43,28,42,42,28,38,5,29,30,26,29,20,39,19,48,28,40,11,18,23,17,49,others=>542),(20,17,14,4,6,40,5,10,40,50,15,7,28,44,44,1,16,48,29,9,38,31,8,34,29,44,41,35,1,12,19,others=>542),(8,43,36,21,16,16,26,1,3,11,13,19,28,39,48,33,21,20,32,3,39,38,49,37,19,22,45,9,17,37,others=>542),(46,36,8,34,13,11,11,10,30,0,32,31,39,26,13,1,1,12,11,23,3,30,12,7,40,17,47,46,41,49,15,others=>542)),((16,8,41,13,37,47,49,40,9,16,3,33,44,31,28,34,49,47,36,30,28,12,40,26,34,29,42,17,8,44,17,others=>542),(16,18,32,39,27,37,36,40,27,12,23,20,47,10,3,31,39,3,7,17,33,25,19,25,15,17,49,22,34,others=>542),(10,19,8,25,2,16,9,4,9,4,5,37,28,18,43,2,38,5,25,21,17,29,26,39,27,24,41,40,44,38,19,others=>542),(7,5,43,33,9,36,26,36,10,47,31,48,15,43,17,22,40,49,4,20,43,40,45,15,46,6,16,12,25,5,others=>542),(2,25,35,6,30,27,40,24,49,17,34,15,20,2,27,3,0,32,14,13,50,25,29,36,27,17,18,12,27,7,10,others=>542),(22,48,28,21,31,2,50,26,47,43,45,34,25,35,9,49,31,39,5,26,23,23,18,12,16,20,43,23,3,16,others=>542),(24,17,34,23,35,34,25,3,28,9,17,38,21,8,23,44,23,10,44,47,28,2,23,31,12,14,11,33,3,28,16,others=>542),(23,17,13,40,0,31,45,37,35,8,9,41,7,47,28,5,3,5,1,41,44,33,25,40,25,9,7,24,15,18,23,others=>542),(45,25,48,1,25,29,18,8,18,18,7,35,1,2,18,19,40,25,31,21,20,38,9,14,12,7,13,3,31,36,others=>542),(44,44,26,7,1,30,26,1,37,13,18,37,19,27,14,28,1,46,5,39,28,7,22,34,34,7,21,40,38,5,24,others=>542),(33,18,8,3,39,17,14,1,22,32,15,14,24,21,13,44,11,33,49,25,24,11,43,46,2,11,40,25,25,25,others=>542),(18,26,11,11,42,3,18,21,26,1,12,17,0,6,12,49,34,31,23,3,44,16,31,45,43,3,35,18,13,46,41,others=>542)),((20,26,10,28,22,2,19,38,4,1,40,39,47,14,37,23,47,24,29,35,48,18,22,26,25,37,9,39,44,12,48,others=>542),(0,7,18,22,18,35,12,4,6,15,37,14,39,39,36,47,14,12,15,40,36,13,26,32,25,9,9,34,others=>542),(25,23,20,13,19,41,50,2,50,10,22,46,42,4,43,21,16,27,42,19,42,29,9,43,29,15,8,14,48,10,20,others=>542),(18,6,45,24,36,27,4,32,46,34,18,30,36,21,34,48,9,48,22,10,25,35,47,14,4,2,21,31,42,3,others=>542),(7,27,10,45,33,6,48,3,5,26,44,1,45,49,25,46,44,35,43,7,47,34,46,37,37,19,20,42,3,47,44,others=>542),(48,18,2,22,39,29,28,34,15,11,48,6,1,28,28,3,28,6,41,49,8,6,37,42,19,13,33,11,47,49,others=>542),(32,7,3,44,49,5,8,4,7,16,27,36,1,48,46,46,34,15,8,34,23,19,50,16,12,43,0,14,31,5,2,others=>542),(36,37,2,40,50,46,12,33,2,12,2,48,14,1,28,30,15,23,12,41,50,12,37,43,44,49,16,8,21,12,2,others=>542),(12,45,28,45,21,37,10,35,35,13,18,6,35,16,13,32,47,3,44,41,40,19,7,0,24,13,25,29,12,18,others=>542),(37,20,8,40,28,25,35,27,36,15,0,31,50,7,22,20,32,22,15,49,4,16,23,12,45,31,32,38,42,49,39,others=>542),(12,49,36,15,8,30,41,28,24,38,24,38,18,32,4,3,48,37,31,8,25,49,12,43,20,21,0,12,9,27,others=>542),(46,4,20,14,18,33,45,9,43,18,1,6,47,27,47,24,1,49,26,44,43,33,17,7,47,36,42,10,39,28,35,others=>542)),((36,46,18,3,6,42,33,49,47,19,49,2,5,46,46,20,46,43,48,42,31,19,37,43,11,24,7,42,17,49,18,others=>542),(37,8,20,11,15,45,42,30,36,2,46,10,8,41,17,46,1,10,43,4,13,32,17,31,22,40,22,5,others=>542),(7,1,4,45,9,9,44,50,45,13,3,49,46,19,18,10,19,50,44,4,27,19,39,42,44,29,10,39,1,1,37,others=>542),(35,7,48,2,9,40,31,35,28,50,47,16,23,32,47,47,22,4,50,10,24,39,23,9,28,15,10,15,34,12,others=>542),(4,17,35,33,12,38,14,34,46,43,8,28,2,18,19,29,28,49,22,31,36,15,33,22,17,22,16,7,50,45,32,others=>542),(44,11,39,7,36,34,20,22,38,27,31,42,47,25,40,25,22,47,17,36,19,20,14,17,20,24,48,18,17,33,others=>542),(39,30,29,42,50,13,3,27,4,28,4,6,29,0,37,13,20,31,46,6,8,41,45,13,34,22,33,41,23,43,47,others=>542),(6,2,15,34,29,22,37,17,44,5,22,7,7,7,6,40,12,21,27,18,50,28,29,40,30,49,50,26,44,39,15,others=>542),(3,12,31,50,12,45,41,34,1,2,36,24,11,34,2,49,28,40,31,47,7,3,36,19,2,39,33,18,29,43,others=>542),(47,17,26,38,41,41,36,43,34,10,5,20,12,23,29,0,24,16,39,10,40,13,38,18,12,11,49,13,12,11,0,others=>542),(18,24,0,29,16,24,21,50,46,33,42,0,43,47,29,12,9,3,27,47,13,45,33,1,31,16,21,46,2,17,others=>542),(48,17,12,43,48,26,12,23,18,2,46,11,44,44,12,40,0,1,42,27,35,47,45,26,48,48,18,17,14,9,3,others=>542)),((42,40,23,26,40,28,36,20,6,31,29,14,43,46,39,10,0,33,39,8,19,2,50,4,19,35,37,33,41,14,24,others=>542),(49,4,19,46,46,6,37,6,49,25,30,15,13,49,8,6,25,36,30,21,29,21,5,5,43,15,11,22,others=>542),(48,47,14,42,8,45,29,2,11,41,28,29,40,16,2,13,48,28,29,44,25,10,9,25,15,20,5,42,48,12,4,others=>542),(30,3,13,16,31,3,6,47,41,14,6,38,18,46,6,40,26,0,7,34,37,48,25,19,0,22,20,8,31,30,others=>542),(43,50,2,40,17,24,32,37,37,43,41,21,34,49,48,23,40,43,5,32,6,13,9,10,1,40,28,48,49,16,28,others=>542),(28,4,9,34,34,18,46,50,8,37,48,14,27,28,35,30,4,47,26,25,13,24,40,36,25,2,48,36,41,25,others=>542),(37,0,33,50,26,35,12,19,22,44,24,50,48,31,16,42,13,18,45,21,29,33,21,49,26,27,34,30,17,8,48,others=>542),(16,44,1,44,45,30,30,37,11,39,39,27,37,33,35,5,48,18,37,26,34,26,28,5,32,35,37,6,30,21,23,others=>542),(32,50,13,13,2,28,9,42,18,49,35,1,6,8,23,45,23,37,41,45,31,30,4,20,39,36,43,30,34,9,others=>542),(33,30,46,8,32,47,42,31,42,28,18,27,44,0,48,7,25,40,5,22,49,3,26,5,8,31,42,22,20,39,26,others=>542),(1,22,35,24,34,36,16,10,34,27,42,20,38,29,33,7,9,21,14,46,22,46,48,40,35,26,42,16,11,41,others=>542),(10,48,0,46,10,49,32,20,8,6,2,2,7,18,48,12,36,37,43,7,17,14,19,2,8,31,29,30,35,8,37,others=>542)),((8,20,47,33,7,50,6,36,22,6,6,32,22,49,32,22,20,38,1,19,26,48,2,43,50,44,45,33,47,0,29,others=>542),(9,1,33,36,21,25,29,45,19,26,45,47,7,44,25,37,17,27,17,28,48,9,42,23,50,38,43,36,45,others=>542),(26,15,43,25,10,48,47,4,26,41,10,2,25,50,48,13,48,37,44,36,11,2,3,40,10,20,7,8,48,6,39,others=>542),(8,12,44,48,9,12,24,34,17,13,49,28,36,24,46,29,6,43,16,35,7,27,45,27,0,46,20,22,26,24,others=>542),(6,44,45,14,39,0,50,33,20,4,39,3,21,10,34,15,3,0,32,31,46,30,25,41,37,41,48,38,13,27,12,others=>542),(18,10,9,25,13,24,40,45,34,29,42,32,47,35,46,15,9,18,35,35,45,5,16,50,18,23,41,13,26,26,others=>542),(31,19,24,44,21,47,4,2,47,32,43,32,29,9,23,49,2,49,34,2,40,3,3,13,5,6,21,26,24,49,46,others=>542),(30,9,49,5,38,44,25,0,22,13,17,30,14,12,28,0,39,44,11,24,45,31,33,7,32,47,7,7,4,22,38,others=>542),(34,16,42,46,26,50,46,15,15,1,35,27,10,14,0,12,36,9,29,43,12,31,35,7,6,33,2,48,34,17,others=>542),(26,19,25,23,4,22,1,16,18,4,9,13,25,4,24,25,25,46,14,43,40,34,44,45,23,23,30,34,7,42,48,others=>542),(6,3,7,27,47,8,50,0,9,35,10,49,8,23,48,33,18,46,9,19,9,21,10,42,34,33,31,28,44,31,others=>542),(15,19,40,13,10,43,35,2,38,41,26,50,6,21,19,17,18,45,1,33,32,26,6,38,4,34,9,39,19,32,42,others=>542)),((21,22,36,25,0,0,34,46,29,46,26,11,43,17,29,7,11,42,10,48,50,48,42,9,32,24,15,32,36,13,24,others=>542),(40,13,30,16,1,42,31,28,35,41,10,4,40,8,0,9,41,31,16,22,9,15,32,4,50,44,21,18,others=>542),(45,35,6,21,2,8,7,3,40,5,18,0,28,0,22,34,4,8,32,46,49,30,19,44,28,0,21,24,27,23,44,others=>542),(7,37,27,36,16,18,1,8,19,47,37,9,12,7,7,6,23,28,46,7,10,36,13,37,22,13,7,0,26,10,others=>542),(49,24,34,31,1,15,39,14,31,29,17,23,32,20,39,28,50,46,8,38,33,20,14,29,11,50,37,0,37,25,50,others=>542),(25,32,3,18,10,39,44,37,5,3,40,49,41,2,34,39,27,40,46,34,28,29,10,17,12,31,8,30,37,49,others=>542),(16,48,23,33,48,25,11,35,47,31,31,11,16,42,39,37,19,15,29,44,46,0,39,10,8,33,23,20,39,42,4,others=>542),(7,8,40,35,43,35,29,25,38,18,47,16,37,36,40,39,36,34,27,26,6,29,14,5,12,15,21,22,45,4,47,others=>542),(25,28,38,28,9,2,2,25,24,4,45,14,39,9,9,16,37,30,39,2,7,33,43,44,43,25,17,4,3,28,others=>542),(27,30,0,19,50,5,13,50,24,12,40,6,37,30,38,47,27,24,47,29,17,32,47,16,26,34,0,6,23,13,7,others=>542),(38,50,15,48,8,32,22,47,10,5,32,40,46,30,13,14,18,42,43,27,49,34,30,33,2,39,7,29,27,46,others=>542),(4,17,43,19,2,26,26,40,13,35,44,14,40,35,2,31,8,9,7,43,9,12,10,31,48,14,39,10,50,35,21,others=>542)),((29,42,40,10,22,43,50,1,42,12,37,20,10,13,16,45,46,35,23,22,42,19,25,38,19,45,25,3,19,47,12,others=>542),(1,20,28,16,48,10,22,33,1,48,26,3,38,13,30,46,43,3,41,7,17,12,36,6,12,47,16,41,others=>542),(12,50,21,49,46,49,45,32,33,30,19,39,6,39,26,46,39,18,16,43,6,32,49,29,1,38,4,11,43,4,35,others=>542),(18,49,24,20,7,31,4,30,47,17,38,44,8,16,48,42,46,50,26,50,9,22,35,32,18,14,42,1,48,50,others=>542),(25,50,34,25,19,10,41,27,34,9,14,35,3,26,44,16,18,24,26,17,14,47,20,43,44,38,17,28,39,22,10,others=>542),(38,32,5,33,1,1,7,48,35,25,39,12,15,22,26,42,13,45,22,27,6,21,23,6,16,47,22,42,46,6,others=>542),(30,48,46,34,42,42,39,41,3,0,23,1,9,5,29,18,39,44,38,39,11,16,0,21,23,44,0,20,6,8,40,others=>542),(48,22,49,10,35,16,49,35,8,10,29,46,44,36,11,41,37,10,40,50,21,17,4,29,37,12,36,11,12,27,11,others=>542),(26,47,29,22,15,30,50,33,49,20,38,9,16,11,6,26,29,44,17,38,49,42,42,45,36,31,28,41,50,20,others=>542),(4,43,32,3,27,27,49,8,15,31,21,31,20,10,45,10,37,22,45,42,1,9,44,50,34,1,35,36,9,11,33,others=>542),(20,45,9,27,25,41,27,36,49,31,32,8,30,6,12,35,42,32,28,0,48,41,43,9,21,26,14,33,39,35,others=>542),(27,17,18,36,5,49,5,23,7,34,12,42,38,26,45,39,9,46,44,38,21,24,15,17,1,44,0,28,49,35,11,others=>542)),((15,28,14,37,35,3,40,12,38,46,23,1,29,2,1,1,15,22,8,32,36,41,2,26,19,17,49,8,30,0,11,others=>542),(43,27,32,16,17,10,14,26,11,18,31,17,4,22,24,6,44,8,21,44,33,19,12,6,35,24,36,35,others=>542),(21,45,39,41,47,25,2,42,38,49,9,12,9,42,12,48,21,47,25,25,41,30,3,4,45,9,10,3,33,6,50,others=>542),(27,29,21,46,17,40,7,43,33,28,23,45,38,14,32,7,28,44,11,19,40,42,0,9,44,17,30,0,33,17,others=>542),(40,40,3,23,26,18,10,14,28,44,32,42,41,8,46,8,34,40,48,38,20,0,33,25,10,34,46,18,10,22,33,others=>542),(9,21,4,19,39,26,22,44,21,3,50,17,48,24,45,50,21,14,17,16,23,0,10,20,49,25,29,49,10,15,others=>542),(38,6,45,31,32,28,5,20,30,15,31,41,16,1,45,31,23,45,5,37,37,23,23,47,18,9,50,5,37,35,22,others=>542),(29,20,50,9,35,22,26,21,50,29,28,18,40,6,39,31,15,8,48,25,37,42,49,22,20,22,15,29,31,42,13,others=>542),(30,38,31,26,20,17,28,36,38,41,31,25,5,42,13,29,16,29,23,13,12,42,20,12,31,36,25,41,2,2,others=>542),(47,42,4,18,36,25,44,24,8,42,25,0,37,43,19,3,28,1,11,39,19,40,44,2,20,24,36,49,50,44,49,others=>542),(47,30,23,27,50,16,9,39,4,25,10,15,44,46,14,23,4,44,5,38,2,14,36,40,3,41,31,8,46,15,others=>542),(17,5,9,30,2,39,1,0,0,18,27,20,40,33,0,0,33,19,22,21,36,38,16,11,37,36,11,47,49,24,20,others=>542)),((4,0,7,40,45,23,14,42,43,15,21,30,11,15,23,3,41,27,4,20,45,2,15,6,45,38,39,0,4,43,16,others=>542),(38,19,49,33,6,50,44,35,37,44,7,48,26,16,11,9,38,25,19,12,7,19,48,14,35,29,0,39,16,others=>542),(43,26,25,10,33,10,38,35,4,6,17,34,20,12,23,16,30,36,15,17,35,20,34,26,36,24,11,19,42,13,5,others=>542),(0,6,37,33,1,5,19,43,48,36,45,0,5,48,46,14,24,50,26,22,25,8,5,20,28,22,0,45,11,4,others=>542),(24,15,20,6,42,26,3,5,44,47,50,8,30,41,0,12,47,22,1,24,24,48,34,40,4,12,26,39,32,7,38,others=>542),(31,40,22,2,9,49,10,26,18,24,5,4,4,18,36,31,14,42,28,22,31,5,50,46,6,20,48,3,1,14,others=>542),(46,10,29,23,17,39,40,1,16,27,21,34,3,37,26,22,13,9,40,33,15,3,11,38,43,13,25,2,16,11,32,others=>542),(36,27,3,23,45,20,2,42,20,25,26,42,46,50,34,11,44,30,49,16,6,49,4,12,13,19,16,0,39,43,7,others=>542),(17,34,38,50,7,40,23,28,50,47,14,29,24,18,21,3,28,20,25,13,37,29,32,34,22,3,31,34,19,5,others=>542),(16,26,49,44,27,34,40,35,43,50,39,35,36,22,34,24,7,26,23,40,31,34,21,25,32,41,22,37,3,12,14,others=>542),(22,4,17,24,19,17,47,43,31,19,48,9,39,44,37,34,3,11,0,49,32,22,31,0,1,30,29,4,22,35,others=>542),(46,18,13,35,6,21,6,43,23,32,40,18,42,11,22,0,48,29,34,25,17,17,13,25,8,7,1,48,29,22,19,others=>542)),((40,12,26,13,4,43,0,25,46,39,43,25,39,44,25,18,21,15,5,40,33,43,9,21,43,49,21,32,49,47,30,others=>542),(3,18,12,37,7,34,3,39,0,49,43,5,42,1,2,18,14,28,3,23,43,8,13,44,12,40,48,33,others=>542),(1,5,37,30,21,43,45,4,2,31,24,41,17,33,36,27,2,24,5,41,19,44,33,38,49,47,31,12,8,6,26,others=>542),(9,3,12,44,27,13,47,5,4,14,26,3,45,35,36,40,40,25,40,45,17,5,41,14,42,37,21,39,11,39,others=>542),(18,42,2,23,46,3,50,4,46,25,14,41,17,44,30,48,30,45,15,41,11,4,31,45,0,45,6,15,26,20,0,others=>542),(17,24,1,21,16,34,30,0,9,20,7,5,50,48,32,45,45,41,25,14,15,30,41,1,42,50,15,38,35,29,others=>542),(32,11,21,31,39,28,27,47,4,9,9,31,37,40,22,45,18,35,46,11,7,36,5,11,33,4,6,20,25,6,23,others=>542),(2,45,15,41,2,42,23,10,25,38,10,33,44,41,14,19,16,50,4,17,34,16,6,19,40,11,22,10,8,35,16,others=>542),(48,27,7,46,0,13,28,8,12,23,26,47,25,38,49,11,11,7,1,36,36,38,10,10,33,27,12,37,6,1,others=>542),(38,15,7,0,19,0,40,36,15,31,49,2,9,36,44,44,2,50,1,30,40,28,17,23,29,37,42,16,15,38,42,others=>542),(32,21,48,44,7,11,50,30,41,21,24,4,13,24,22,40,45,42,14,46,29,2,46,20,3,17,42,40,38,17,others=>542),(48,32,13,6,40,25,3,25,37,50,7,35,37,7,45,32,47,25,8,47,6,37,43,17,13,26,13,24,38,36,41,others=>542)),((47,47,36,46,23,44,5,11,6,27,49,45,49,12,28,1,26,40,48,21,3,44,25,9,31,9,14,12,10,38,44,others=>542),(28,41,33,15,40,4,34,35,37,50,27,32,42,22,41,7,49,5,48,32,0,10,4,31,2,2,19,16,others=>542),(19,36,19,5,31,3,47,18,16,48,45,18,1,32,12,28,36,48,18,22,21,9,23,50,0,46,19,13,37,45,0,others=>542),(15,1,21,42,26,1,21,4,50,14,21,45,16,41,10,28,17,45,21,1,4,27,8,14,46,4,31,18,41,41,others=>542),(8,23,14,30,26,6,22,3,12,8,19,14,31,27,27,28,25,10,10,22,16,34,4,2,32,12,10,19,16,19,29,others=>542),(12,33,16,45,21,16,6,22,2,0,1,0,44,33,13,16,35,41,16,34,10,9,36,43,50,46,41,18,10,8,others=>542),(17,21,29,11,33,21,36,22,49,33,17,8,49,23,41,6,19,3,13,25,33,1,11,11,33,35,30,20,47,30,44,others=>542),(41,2,38,22,26,47,0,22,18,37,33,37,20,38,25,23,46,8,50,16,36,47,0,10,35,20,1,9,11,46,5,others=>542),(6,2,41,5,49,0,22,33,28,43,14,31,17,14,33,11,45,15,13,0,18,44,6,10,20,13,18,27,6,32,others=>542),(16,14,44,10,13,34,22,25,24,0,42,44,42,33,13,17,3,43,15,38,6,9,17,50,5,12,15,39,7,26,31,others=>542),(43,12,49,36,3,8,21,15,40,31,25,23,0,40,34,4,35,29,2,49,20,36,37,6,44,8,5,43,33,24,others=>542),(41,6,39,41,2,19,18,32,6,19,49,15,2,28,27,3,5,9,39,9,16,43,29,30,43,32,16,45,28,29,12,others=>542)),((49,3,32,20,35,20,35,4,12,44,1,23,33,18,40,46,41,49,19,39,36,11,31,42,27,18,15,41,19,28,32,others=>542),(34,47,49,39,6,33,21,2,15,23,40,23,24,15,3,50,29,29,2,25,6,43,20,40,39,45,38,7,others=>542),(33,15,29,28,31,5,17,20,48,11,43,7,45,36,19,37,47,19,7,36,48,0,45,46,48,35,25,33,13,20,19,others=>542),(23,11,12,8,41,19,31,42,41,13,37,33,10,7,0,40,13,21,40,10,37,35,49,18,12,1,49,49,21,23,others=>542),(42,41,27,5,39,38,12,7,21,24,5,40,42,28,22,25,16,48,19,26,42,6,17,11,38,44,39,28,42,32,23,others=>542),(37,20,23,22,33,9,5,6,38,11,1,40,37,35,17,8,37,13,26,7,33,13,31,5,10,27,2,34,15,20,others=>542),(31,11,34,47,44,32,20,26,30,17,38,41,17,32,34,3,32,41,4,15,37,29,25,18,30,8,3,35,44,8,44,others=>542),(24,48,33,41,20,26,39,14,32,40,0,11,41,24,1,43,49,3,32,45,45,3,2,18,33,45,10,32,8,26,6,others=>542),(19,14,5,49,4,34,40,29,38,9,20,37,11,22,46,18,36,46,10,32,18,23,21,45,40,15,15,28,35,25,others=>542),(23,41,34,38,0,4,34,48,43,47,38,9,0,14,26,31,46,49,38,8,24,31,25,7,49,31,17,3,26,42,3,others=>542),(3,30,25,33,17,36,21,3,10,47,29,46,18,4,50,3,10,7,32,45,47,32,21,0,38,26,36,7,6,37,others=>542),(20,11,2,0,40,50,39,23,28,7,46,22,39,6,28,20,28,39,8,32,20,38,47,43,44,4,33,7,33,28,3,others=>542)),((46,0,26,0,26,22,50,38,39,37,10,44,20,39,20,19,2,16,40,28,35,18,9,0,43,17,14,37,21,33,14,others=>542),(16,39,49,2,48,45,43,0,30,18,45,18,35,15,4,9,11,33,23,5,32,50,18,21,23,6,14,23,32,others=>542),(2,22,27,30,32,41,14,36,2,26,17,39,29,10,28,21,30,17,16,20,3,49,35,21,37,9,31,31,24,44,17,others=>542),(32,19,8,49,16,46,15,30,9,46,49,15,16,28,13,26,24,23,8,23,29,15,37,1,20,43,9,42,3,23,others=>542),(42,22,24,20,47,4,8,15,31,10,20,47,30,40,32,45,25,23,43,8,3,26,0,29,3,37,8,3,15,29,34,others=>542),(16,47,27,16,24,36,14,24,26,37,33,41,34,18,5,11,7,23,45,6,12,35,36,28,34,34,42,9,27,41,others=>542),(34,5,29,50,36,1,8,32,41,0,8,43,29,24,29,17,28,24,43,28,26,43,28,39,48,7,39,43,24,43,28,others=>542),(6,0,47,33,4,33,35,36,0,14,38,17,33,30,24,30,0,34,1,29,27,37,6,9,30,20,46,23,30,27,38,others=>542),(0,46,13,0,21,38,41,4,11,8,43,20,14,5,21,21,4,20,13,31,29,27,35,12,30,39,50,16,42,15,others=>542),(16,41,3,14,46,34,6,39,45,44,43,35,20,24,28,14,24,24,10,44,13,44,50,11,32,23,4,13,19,34,35,others=>542),(12,3,12,14,16,12,36,28,14,20,14,21,7,28,23,19,1,22,35,21,5,15,32,3,22,8,27,41,0,38,others=>542),(26,28,22,38,49,0,37,8,45,49,20,20,5,47,26,47,41,43,32,24,1,35,24,12,11,25,0,27,35,44,35,others=>542)),((1,10,3,0,1,44,10,5,30,40,15,17,16,11,42,46,19,10,9,21,17,35,42,43,19,12,49,15,46,30,25,others=>542),(0,27,6,34,31,16,40,26,6,31,17,44,19,4,11,16,33,5,19,50,50,34,0,50,4,14,17,38,others=>542),(25,19,44,2,9,39,41,0,12,14,12,50,28,3,26,16,36,25,44,13,17,29,14,9,42,45,35,26,26,29,34,others=>542),(28,36,6,32,21,14,11,39,36,10,41,23,5,39,28,6,13,13,44,32,28,31,16,23,33,47,14,20,10,34,others=>542),(47,42,11,27,22,48,20,30,4,39,16,7,6,47,15,13,40,14,2,45,20,12,49,48,12,12,5,17,41,37,15,others=>542),(2,36,26,18,43,48,12,24,2,4,48,35,7,27,40,49,41,30,47,23,35,36,49,9,17,18,27,45,27,20,others=>542),(26,2,29,26,26,21,35,38,21,18,5,25,36,14,16,5,40,14,0,0,46,49,31,10,21,46,27,11,4,4,34,others=>542),(25,49,28,13,38,10,31,43,19,3,21,49,45,37,3,15,30,48,5,10,19,14,48,41,14,44,35,24,40,3,40,others=>542),(47,25,16,18,0,1,7,30,1,6,26,22,40,27,24,50,14,40,11,3,22,38,39,28,33,37,22,7,17,29,others=>542),(27,43,4,38,49,7,33,15,33,33,10,29,45,26,47,15,43,41,26,40,5,16,37,19,39,12,15,23,39,20,30,others=>542),(37,30,32,28,5,3,3,0,50,5,48,26,17,28,41,20,30,5,7,1,13,16,6,31,32,13,21,6,11,22,others=>542),(40,39,38,25,47,35,36,7,27,43,20,25,20,30,10,45,16,28,9,49,41,17,39,10,21,2,6,10,22,6,13,others=>542)),((21,17,1,50,11,21,32,23,21,47,15,23,5,12,32,38,13,29,25,48,42,22,12,9,28,41,41,27,31,1,34,others=>542),(10,14,26,20,23,42,16,29,11,24,41,32,42,49,30,40,26,24,13,11,32,39,50,23,19,15,30,16,others=>542),(25,24,1,37,35,15,39,36,23,3,50,24,41,40,5,43,43,0,8,35,14,13,35,42,20,6,18,17,18,12,44,others=>542),(42,43,8,4,31,5,24,35,27,1,9,35,38,18,23,25,44,40,13,48,1,50,43,38,44,26,20,15,50,50,others=>542),(39,48,40,7,45,9,9,5,5,34,45,30,50,37,22,32,42,17,38,39,47,40,45,21,37,12,31,20,7,32,48,others=>542),(24,23,5,34,43,45,38,23,25,22,31,24,2,35,39,20,21,27,21,12,25,22,3,7,21,3,40,9,11,46,others=>542),(5,5,43,4,46,4,38,16,3,38,20,7,18,27,32,43,23,11,45,22,22,2,9,14,10,8,8,44,28,0,44,others=>542),(42,43,43,34,41,32,30,16,14,43,35,32,49,48,31,27,30,5,7,41,2,23,2,24,35,41,2,21,15,18,47,others=>542),(24,14,38,49,16,1,16,30,40,43,39,29,33,45,20,29,27,3,27,7,22,27,18,25,12,22,34,42,30,39,others=>542),(18,25,4,29,36,36,39,5,13,47,10,14,13,15,1,18,44,32,41,3,20,22,29,4,42,8,20,47,34,25,5,others=>542),(1,33,14,4,3,10,13,22,35,5,13,34,50,32,0,31,19,43,6,42,45,25,39,11,17,22,34,35,30,40,others=>542),(5,36,21,0,47,22,29,17,13,49,16,23,38,8,29,8,18,1,2,19,14,6,36,28,37,48,27,14,43,14,0,others=>542)),((31,2,39,41,11,25,7,48,31,29,22,26,0,27,28,0,33,22,11,12,14,16,9,29,36,50,26,8,17,3,38,others=>542),(5,40,3,46,39,0,17,22,8,34,31,34,5,47,33,39,50,15,36,25,2,19,39,22,26,45,44,49,others=>542),(3,42,28,1,44,41,21,5,47,13,12,25,42,34,13,24,36,5,49,43,16,37,1,11,11,30,44,13,41,28,0,others=>542),(32,6,40,44,32,35,14,42,39,15,38,18,20,40,1,41,22,0,9,50,45,47,42,0,8,7,31,2,38,3,others=>542),(47,49,34,16,32,5,1,37,16,30,1,16,22,4,13,24,37,15,19,40,47,42,22,1,3,43,37,5,34,25,31,others=>542),(36,33,32,18,45,23,9,5,27,49,2,47,26,23,17,21,38,37,48,0,42,8,26,12,36,19,41,33,16,12,others=>542),(47,10,17,38,9,9,20,23,25,38,41,39,30,2,27,0,15,30,16,43,32,37,10,5,31,48,3,5,3,8,17,others=>542),(18,44,10,13,2,12,36,43,1,31,21,26,11,4,44,10,42,21,24,43,6,40,20,48,45,36,10,27,32,12,44,others=>542),(12,0,15,1,22,49,44,2,2,2,22,13,27,43,15,17,45,18,36,36,30,17,34,19,49,8,11,37,6,50,others=>542),(13,20,17,33,9,39,29,1,30,50,3,17,13,6,6,5,23,46,14,20,8,42,19,28,28,7,3,21,42,11,50,others=>542),(22,28,39,25,3,2,9,13,49,32,38,12,42,40,27,27,17,19,36,32,34,16,19,4,16,42,6,45,17,20,others=>542),(22,40,36,21,40,45,43,6,11,38,27,48,10,17,16,15,25,40,15,6,9,28,14,5,37,36,8,46,30,43,32,others=>542)),((7,25,32,21,41,3,30,20,49,37,48,36,12,25,27,49,37,39,49,14,19,49,50,19,17,41,16,10,1,2,33,others=>542),(3,19,10,37,18,28,26,49,10,10,20,37,6,47,28,17,18,50,20,11,20,32,43,7,25,3,7,0,4,others=>542),(29,29,41,10,10,3,36,49,31,49,21,34,45,27,12,14,3,27,26,27,1,37,31,35,16,10,37,26,23,41,49,others=>542),(32,48,13,47,37,20,7,38,39,4,33,16,25,46,9,14,48,31,33,20,22,3,34,24,1,2,9,15,7,39,others=>542),(30,1,6,31,10,50,13,35,46,31,31,43,2,4,6,35,50,39,31,8,45,36,14,11,6,45,31,41,46,43,20,others=>542),(42,3,43,31,49,45,26,18,20,19,40,50,11,11,12,7,7,20,40,15,34,11,24,10,32,27,36,9,47,23,others=>542),(8,2,29,35,15,49,33,10,14,45,28,40,45,25,32,15,16,35,19,23,44,9,41,44,34,33,32,45,2,2,10,others=>542),(9,39,43,34,20,19,18,37,28,2,28,45,33,9,33,20,7,25,12,19,44,32,22,35,28,11,22,25,50,45,36,others=>542),(14,8,16,12,12,34,38,41,26,41,34,39,4,47,43,3,19,26,43,48,33,20,7,48,29,2,9,28,1,11,others=>542),(48,49,24,17,0,28,12,44,42,22,45,18,16,1,23,30,19,32,18,45,47,6,1,4,34,26,38,26,8,13,1,others=>542),(5,16,23,14,15,9,42,1,44,47,19,5,30,40,38,16,44,20,26,29,38,21,18,30,23,48,41,12,9,11,others=>542),(35,33,1,44,44,37,26,45,43,8,15,2,11,44,26,12,45,19,18,34,26,45,49,18,13,44,49,42,39,15,29,others=>542)));
  Fecha_5  := ((1,enero,2020),(15,febrero,2004),(1,diciembre,2001),(5,febrero,2007),(1,enero,2001)); -- F1
  Fecha_5_1  := ((31,diciembre,2020),(20,marzo,2004),(31,enero,2002),(5,febrero,2007),(31,diciembre,2020)); -- F2
  Fecha_5_R  := ((1,diciembre,2020),(1,febrero,2004),(1,diciembre,2001),(1,febrero,2007),(1,enero,2006)); -- Respuesta
  -- Test
  for i in Fecha_5'range loop
    begin
      Maximo(Puvli, Fecha_5(i), Fecha_5_1(i), Fecha_v1);
      if Fecha_v1.mes = Fecha_5_R(i).mes and Fecha_v1.anno = Fecha_5_R(i).anno then
        green; Put("V"); v:=v+1;
      elsif Fecha_v1.mes = Fecha_5_R(i).mes or Fecha_v1.anno = Fecha_5_R(i).anno then
        yellow; Put("S"); x:=x+1;
      else 
        red; Put("X"); x:=x+1; 
        Put(T_Mes'Image(Fecha_v1.Mes));
        Put(Fecha_v1.Anno); New_Line;
      end if;
    exception
      when Error: Program_Error => red; Put("E"); x:=x+1;
      when Error: others => red; Put(Exception_Information(Error)); x:=x+1;
    end;
  end loop;
  -- Finish
  white; New_Line;

  -----------------
  -- Simplificar --
  -----------------
  Put("Simplificar (1): ");
  -- Casos de prueba
  --* Datos bonitos https://pastebin.com/X1brdSBs
  Carreteras_2 := ((Cont=>10,Ctras=>((Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>7.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.352,3.425),(8.329,3.291),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(5.372,2.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>4.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>7.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(-9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>7.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.352,3.425),(8.329,3.291),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(5.372,2.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>4.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),others=>(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>42.0,Trazado=>(Num => 0,Ptos => (others=>(100.0,100.0)))))),(Cont=>8,Ctras=>((Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>7.0,Trazado=>(Num => 6,Ptos => ((5.372,2.209),(6.352,3.425),(8.329,3.291),(8.329,4.292),(9.281,2.390),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 4,Ptos => ((5.372,2.209),(6.332,3.425),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>7.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(-9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.352,3.425),(8.329,3.291),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(5.372,2.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>4.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),others=>(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>42.0,Trazado=>(Num => 0,Ptos => (others=>(100.0,100.0)))))));
  Carreteras_2_R_sin_peajes := ((Cont=>5,Ctras=>((Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(5.372,2.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(5.372,2.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),others=>(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>42.0,Trazado=>(Num => 0,Ptos => (others=>(100.0,100.0)))))),(Cont=>5,Ctras=>((Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 4,Ptos => ((5.372,2.209),(6.332,3.425),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.352,3.425),(8.329,3.291),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(5.372,2.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),others=>(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>42.0,Trazado=>(Num => 0,Ptos => (others=>(100.0,100.0)))))));
  Carreteras_2_R_peajes := ((Cont=>5,Ctras=>((Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>7.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.352,3.425),(8.329,3.291),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>4.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>7.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(-9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>7.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.352,3.425),(8.329,3.291),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>4.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),others=>(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>42.0,Trazado=>(Num => 0,Ptos => (others=>(100.0,100.0)))))),(Cont=>3,Ctras=>((Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>7.0,Trazado=>(Num => 6,Ptos => ((5.372,2.209),(6.352,3.425),(8.329,3.291),(8.329,4.292),(9.281,2.390),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>7.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(-9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>4.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),others=>(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>42.0,Trazado=>(Num => 0,Ptos => (others=>(100.0,100.0)))))));
  -- Test
  for i in Carreteras_2'range loop
    begin
      Simplificar(Carreteras_2(i), Estatica_carre);
      if Carreteras_2(i) = Carreteras_2_R_sin_peajes(i) and
          Carreteras_2_R_peajes(i).Ctras(Carreteras_2_R_peajes(i).Cont) = Estatica_carre.Ctras(Estatica_carre.Cont) then
        green; Put("V"); v:=v+1;
      elsif Carreteras_2(i) = Carreteras_2_R_sin_peajes(i) or
          Carreteras_2_R_peajes(i).Ctras(Carreteras_2_R_peajes(i).Cont) = Estatica_carre.Ctras(Estatica_carre.Cont) then
        yellow; Put("S"); x:=x+1;
        --Put(Estatica_carre.Ctras(4).peaje_km, Exp=>0);
      else 
        red; Put("X"); x:=x+1;
        -- Put(Carreteras_2(i).Cont);
        -- Put(Carreteras_2_R_sin_peajes(i).Cont);
        -- Put(Estatica_carre.Cont);
      end if;
    exception
      when Error: Program_Error => red; Put("E"); x:=x+1;
      when Error: others => red; Put(Exception_Information(Error)); x:=x+1;
    end;
  end loop;
  -- Finish
  white; New_Line;

  -----------------
  -- Simplificar --
  -----------------
  Put("Simplificar (2): ");
  -- Casos de prueba
  --* Datos bonitos https://pastebin.com/jR3wWzLP
  Puntos_10 := ((Num=>16,Ptos=>((1.893,28.808),(13.935,23.659),(17.718,45.933),(46.734,22.756),(40.797,8.783),(14.285,0.189),(14.405,19.437),(25.227,22.658),(4.589,35.261),(5.008,48.888),(25.562,25.496),(3.292,5.621),(28.732,25.953),(25.313,12.144),(12.175,29.072),(44.067,40.023),others=>(0.0,0.0))),(Num=>2,Ptos=>((1.893,28.808),(13.935,23.659),others=>(0.0,0.0))),(Num=>4,Ptos=>((1.893,28.808),(13.935,23.659),(17.718,45.933),(46.734,22.756),others=>(0.0,0.0))),(Num=>11,Ptos=>((1.893,28.808),(13.935,23.659),(17.718,45.933),(46.734,22.756),(40.797,8.783),(14.285,0.189),(14.405,19.437),(25.227,22.658),(4.589,35.261),(5.008,48.888),(25.562,25.496),others=>(0.0,0.0))),(Num=>15,Ptos=>((13.935,23.659),(17.718,45.933),(46.734,22.756),(40.797,8.783),(14.285,0.189),(14.405,19.437),(25.227,22.658),(4.589,35.261),(5.008,48.888),(25.562,25.496),(3.292,5.621),(28.732,25.953),(25.313,12.144),(12.175,29.072),(44.067,40.023),others=>(0.0,0.0))),(Num=>9,Ptos=>((1.893,28.808),(13.935,23.659),(17.718,45.933),(46.734,22.756),(40.797,8.783),(14.285,0.189),(14.405,19.437),(25.227,22.658),(4.589,35.261),others=>(0.0,0.0))),(Num=>10,Ptos=>((1.893,28.808),(13.935,23.659),(17.718,45.933),(46.734,22.756),(40.797,8.783),(14.285,0.189),(14.405,19.437),(25.227,22.658),(4.589,35.261),(5.008,48.888),others=>(0.0,0.0))),(Num=>5,Ptos=>((1.893,28.808),(13.935,23.659),(17.718,45.933),(46.734,22.756),(40.797,8.783),others=>(0.0,0.0))),(Num=>3,Ptos=>((1.893,28.808),(13.935,23.659),(17.718,45.933),others=>(0.0,0.0))),(Num=>64,Ptos=>((1.893,28.808),(13.935,23.659),(17.718,45.933),(46.734,22.756),(40.797,8.783),(14.285,0.189),(14.405,19.437),(25.227,22.658),(4.589,35.261),(5.008,48.888),(25.562,25.496),(3.292,5.621),(28.732,25.953),(25.313,12.144),(12.175,29.072),(44.067,40.023),(21.288,8.539),(34.61,32.85),(7.059,15.286),(33.312,48.029),(37.255,44.713),(36.411,31.516),(43.918,40.347),(25.68,9.254),(41.791,21.342),(0.903,36.067),(26.49,23.124),(16.219,24.546),(0.459,41.347),(10.399,10.982),(37.446,27.774),(28.126,16.962),(12.833,34.212),(16.148,13.871),(29.493,15.263),(27.655,32.944),(0.096,35.012),(33.095,26.824),(0.732,22.994),(48.918,19.731),(5.083,10.717),(41.392,24.372),(18.237,19.603),(31.344,49.902),(41.189,5.3),(47.41,6.445),(15.538,15.963),(19.032,39.616),(48.053,6.024),(3.427,19.898),(28.951,49.35),(23.076,42.387),(41.911,15.993),(6.783,7.655),(6.903,34.912),(5.039,32.373),(47.381,45.52),(25.519,39.784),(20.228,44.143),(47.633,43.119),(22.395,4.211),(34.264,14.048),(30.039,33.169),(21.603,24.932),others=>(0.0,0.0))));
  Puntos_10_R := ((Num=>5,Ptos=>((1.893,28.808),(40.797,8.783),(4.589,35.261),(28.732,25.953),(44.067,40.023),others=>(0.0,0.0))),(Num=>2,Ptos=>((1.893,28.808),(13.935,23.659),others=>(0.0,0.0))),(Num=>2,Ptos=>((1.893,28.808),(46.734,22.756),others=>(0.0,0.0))),(Num=>4,Ptos=>((1.893,28.808),(40.797,8.783),(4.589,35.261),(25.562,25.496),others=>(0.0,0.0))),(Num=>5,Ptos=>((13.935,23.659),(14.285,0.189),(5.008,48.888),(25.313,12.144),(44.067,40.023),others=>(0.0,0.0))),(Num=>3,Ptos=>((1.893,28.808),(40.797,8.783),(4.589,35.261),others=>(0.0,0.0))),(Num=>4,Ptos=>((1.893,28.808),(40.797,8.783),(4.589,35.261),(5.008,48.888),others=>(0.0,0.0))),(Num=>2,Ptos=>((1.893,28.808),(40.797,8.783),others=>(0.0,0.0))),(Num=>2,Ptos=>((1.893,28.808),(17.718,45.933),others=>(0.0,0.0))),(Num=>17,Ptos=>((1.893,28.808),(40.797,8.783),(4.589,35.261),(28.732,25.953),(21.288,8.539),(37.255,44.713),(41.791,21.342),(0.459,41.347),(12.833,34.212),(0.096,35.012),(5.083,10.717),(41.189,5.3),(48.053,6.024),(41.911,15.993),(47.381,45.52),(22.395,4.211),(21.603,24.932),others=>(0.0,0.0))));
  -- Test
  for i in Puntos_10'range loop
    begin
      Simplificar(Puntos_10(i));
      if Puntos_10(i).Num = Puntos_10_R(i).Num and
          Puntos_10(i).Ptos(1..Puntos_10_R(i).Num) = Puntos_10_R(i).Ptos(1..Puntos_10_R(i).Num) then
        green; Put("V"); v:=v+1;
      elsif Puntos_10(i).Num = Puntos_10_R(i).Num or
            Puntos_10(i).Ptos(1..Puntos_10_R(i).Num) = Puntos_10_R(i).Ptos(1..Puntos_10_R(i).Num) then
        yellow; Put("S"); x:=x+1;
      else 
        red; Put("X"); x:=x+1;
      end if;
    exception
      when Error: Program_Error => red; Put("E"); x:=x+1;
      when Error: others => red; Put(Exception_Information(Error)); x:=x+1;
    end;
  end loop;
  -- Finish
  white; New_Line;

  -----------------
  -- Simplificar --
  -----------------
  Put("Simplificar (3): ");
  -- Casos de prueba
  --* Datos bonitos https://pastebin.com/Dj9DNvBr
  Carreteras_2 := ((Cont=>10,Ctras=>((Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>7.0,Trazado=>(Num => 10,Ptos => ((5.372,2.209),(5.372,2.2091),(6.352,3.425),(8.329,3.291),(8.329,3.291),(8.329,3.291),(8.329,4.292),(8.329,4.292),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 6,Ptos => ((5.372,2.209),(6.332,3.425),(5.372,2.209),(8.329,4.292),(9.281,2.390),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 7,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(7.283,3.209),(7.283,3.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>4.0,Trazado=>(Num => 6,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(9.281,2.390),(7.283,3.209),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>7.0,Trazado=>(Num => 8,Ptos => ((5.372,2.209),(5.372,2.209),(5.372,2.209),(5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(-9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 8,Ptos => ((5.372,2.209),(5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(9.281,2.390),(9.281,2.390),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>7.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.352,3.291),(8.329,3.291),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 6,Ptos => ((5.372,2.209),(6.332,3.425),(6.332,2.209),(5.372,2.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>4.0,Trazado=>(Num => 5,Ptos => ((5.372,3.425),(6.332,3.425),(7.283,3.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),others=>(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>42.0,Trazado=>(Num => 0,Ptos => (others=>(100.0,100.0)))))),(Cont=>8,Ctras=>((Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>7.0,Trazado=>(Num => 6,Ptos => ((5.372,2.209),(6.352,3.425),(8.329,3.291),(8.329,4.292),(9.281,2.390),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 4,Ptos => ((5.372,2.209),(6.332,3.425),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>7.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,3.425),(-9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(9.281,2.390),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.352,3.425),(5.372,2.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(5.372,2.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>4.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),others=>(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>42.0,Trazado=>(Num => 0,Ptos => (others=>(100.0,100.0)))))));
  Carreteras_2_R_Sin_Puntos := ((Cont=>10,Ctras=>((Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>7.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.352,3.425),(8.329,3.291),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(5.372,2.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>4.0,Trazado=>(Num => 6,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(9.281,2.390),(7.283,3.209),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>7.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(-9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>7.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.352,3.291),(8.329,3.291),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 6,Ptos => ((5.372,2.209),(6.332,3.425),(6.332,2.209),(5.372,2.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>4.0,Trazado=>(Num => 5,Ptos => ((5.372,3.425),(6.332,3.425),(7.283,3.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),others=>(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>42.0,Trazado=>(Num => 0,Ptos => (others=>(100.0,100.0)))))),(Cont=>8,Ctras=>((Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>7.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.352,3.425),(8.329,3.291),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 4,Ptos => ((5.372,2.209),(6.332,3.425),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>7.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,3.425),(-9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(9.281,2.390),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.352,3.425),(5.372,2.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(5.372,2.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>0.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>4.0,Trazado=>(Num => 5,Ptos => ((5.372,2.209),(6.332,3.425),(7.283,3.209),(8.329,4.292),(9.281,2.390),others=>(100.0,100.0)))),others=>(Codigo=>(others=>'z'),Inicio=>(others=>'z'),Final=>(others=>'z'),Peaje_km=>42.0,Trazado=>(Num => 0,Ptos => (others=>(100.0,100.0)))))));
  -- Test
  for i in Carreteras_2'range loop
    begin
      bool_v1 := true;
      Simplificar(Carreteras_2(i));
      for c in 1..Carreteras_2_R_Sin_Puntos(i).Cont loop
        for p in 1..Carreteras_2_R_Sin_Puntos(i).Ctras(c).Trazado.Num loop
          if Carreteras_2_R_Sin_Puntos(i).Ctras(c).Trazado.Ptos(p) /= Carreteras_2(i).Ctras(c).Trazado.Ptos(p) then
            bool_v1 := false;
          end if;
        end loop;
      end loop;
      if bool_v1 then
        green; Put("V"); v:=v+1;
      else 
        red; Put("X"); x:=x+1;
        -- Put(Carreteras_2(i).Cont);
        -- Put(Carreteras_2_R_sin_peajes(i).Cont);
        -- Put(Estatica_carre.Cont);
      end if;
    exception
      when Error: Program_Error => red; Put("E"); x:=x+1;
      when Error: others => red; Put(Exception_Information(Error)); x:=x+1;
    end;
  end loop;
  -- Finish
  white; New_Line;

  --------------------------
  -- DNI_Mayor_Patrimonio --
  --------------------------
  Put("DNI Mayor Patrimonio: ");
  -- Casos de prueba
  --* Datos bonitos: https://pastebin.com/eTha8JHk
  Urba_3 := ((((Num_Apartamentos=>4,Apartamentos=>((Precio=>10000,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>17902696),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)),(Precio=>27018,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>17902696),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)),(Precio=>21829,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>17902696),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)),(Precio=>34567,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>17934296),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)),others=>(Precio=>0,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)))),(Num_Apartamentos=>3,Apartamentos=>((Precio=>10000,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>17902696),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)),(Precio=>27018,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>17902696),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)),(Precio=>21829,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>17902696),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)),(Precio=>232132312,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>18000000),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)),others=>(Precio=>0,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)))),others=>(Num_Apartamentos=>0,Apartamentos=>(others=>(Precio=>0,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0))))),others=>(others=>(Num_Apartamentos=>0,Apartamentos=>(others=>(Precio=>0,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)))))),(((Num_Apartamentos=>4,Apartamentos=>((Precio=>10000,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>17902696),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)),(Precio=>27018,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>17902696),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)),(Precio=>21829,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>17902696),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)),(Precio=>34567,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>17934296),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)),others=>(Precio=>0,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)))),(Num_Apartamentos=>3,Apartamentos=>((Precio=>10000,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>17902329),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)),(Precio=>27018,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>17902329),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)),(Precio=>21829,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>17902329),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)),(Precio=>232132312,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>18000000),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)),others=>(Precio=>0,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)))),others=>(Num_Apartamentos=>0,Apartamentos=>(others=>(Precio=>0,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0))))),((Num_Apartamentos=>4,Apartamentos=>((Precio=>10000,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>17902696),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)),(Precio=>27018,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>17902696),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)),(Precio=>21829,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>17902696),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)),(Precio=>34567,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>17934296),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)),others=>(Precio=>0,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)))),(Num_Apartamentos=>5,Apartamentos=>((Precio=>10000,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>17902696),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)),(Precio=>27018,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>17902696),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)),(Precio=>21829,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>17902696),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)),(Precio=>532132312,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>12345678),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)),others=>(Precio=>0,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)))),others=>(Num_Apartamentos=>0,Apartamentos=>(others=>(Precio=>0,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0))))),others=>(others=>(Num_Apartamentos=>0,Apartamentos=>(others=>(Precio=>0,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)))))),(((Num_Apartamentos=>1,Apartamentos=>((Precio=>42,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>78900700),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)),others=>(Precio=>0,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)))),others=>(Num_Apartamentos=>0,Apartamentos=>(others=>(Precio=>0,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0))))),others=>(others=>(Num_Apartamentos=>0,Apartamentos=>(others=>(Precio=>0,Propietario_Actual=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0),Propietario_Anterior=>(Nom=>(others=>'z'),Apel=>(others=>'z'),DNI=>0)))))));
  Int_3_R := (17902696, 12345678, 78900700);
  -- Test
  for i in Urba_3'range loop
    begin
      Int_v1 := DNI_Mayor_Patrimonio(Urba_3(i));
      if Int_v1 = Int_3_R(i) then
        green; Put("V"); v:=v+1;
      else 
        red; Put("X"); x:=x+1;
        --Put(Int_v1);
      end if;
    exception
      when Error: Program_Error => red; Put("E"); x:=x+1;
      when Error: others => red; Put(Exception_Information(Error)); x:=x+1;
    end;
  end loop;
  -- Finish
  white; New_Line;


  ------------------------------
  -- encontrar_espacio_blanco --
  ------------------------------
  Put("Encontrar Espacio Blanco: ");
  -- Casos de prueba
  T_Puzle_4 := (((1,6,9,2,5,8,4,3,7),(5,7,8,4,9,3,6,2,1),(3,4,4,7,6,1,9,5,8),(9,5,2,1,8,4,7,6,3),(6,1,3,5,7,9,2,8,4),(4,8,7,6,3,2,5,1,9),(8,3,6,9,4,5,0,0,0),(7,9,1,8,2,6,0,0,0),(2,4,5,3,1,7,0,0,0)),((5,3,4,6,7,8,0,0,0),(6,7,2,1,9,5,0,0,0),(1,9,8,3,4,2,0,0,0),(8,5,9,7,6,1,4,2,3),(4,2,6,8,5,3,7,9,1),(7,1,3,9,2,4,8,5,6),(9,6,1,5,3,7,2,8,4),(2,8,7,4,1,9,6,3,5),(3,4,5,2,8,6,1,7,9)),((0,0,0,7,3,8,4,1,5),(0,0,0,4,2,5,6,9,8),(0,0,0,6,1,9,3,2,7),(2,7,4,5,6,1,8,3,9),(1,8,5,9,7,3,2,4,6),(9,3,6,2,8,4,5,7,1),(7,2,1,3,5,6,9,8,4),(8,5,9,1,4,2,7,6,3),(4,6,3,8,9,7,1,5,2)),((2,8,1,5,7,4,9,3,6),(3,9,4,8,6,2,7,1,5),(6,5,7,3,1,9,4,8,2),(7,1,3,0,0,0,2,6,9),(8,6,5,0,0,0,3,4,1),(9,4,2,0,0,0,8,5,7),(4,7,9,1,5,8,6,2,3),(5,3,8,9,2,6,1,7,4),(1,2,6,7,4,3,5,9,8)));
  Int_4_R := (7,1,1,4); -- Fila
  Int_4_R_1 := (7,7,1,4); -- Columna
  -- Test
  for i in T_Puzle_4'range loop
    begin
      encontrar_espacio_blanco(T_Puzle_4(i), int_v1, int_v2);
      if int_v1 = Int_4_R(i) and int_v2 = Int_4_R_1(i) then
        green; Put("V"); v:=v+1;
      elsif int_v1 = Int_4_R(i) or int_v2 = Int_4_R_1(i) then
        yellow; Put("S"); x:=x+1;
        -- Put(int_v1); Put(int_v2);
      else 
        red; Put("X"); x:=x+1;
        --Put(int_v1,2); Put(int_v2,2);
      end if;
    exception
      when Error: Program_Error => red; Put("E"); x:=x+1;
      when Error: others => red; Put(Exception_Information(Error)); x:=x+1;
    end;
  end loop;
  -- Finish
  white; New_Line;

  -----------------------------
  -- rotar_matriz_derecha_90 --
  -----------------------------
  Put("Rotar Matriz: ");
  -- Casos de prueba
  --* Recuerda probar con matrices de 4x4 por ejemplo
  Ficha_3 := (((1,2,3),
               (4,5,6),
               (7,8,9)),
              ((2,3,4),
               (6,0,2),
               (7,2,9)),
              ((0,0,0),
               (0,0,0),
               (0,0,1)));
  Ficha_3_R := (((7,4,1),(8,5,2),(9,6,3)),((7,6,2),(2,0,3),(9,2,4)),((0,0,0),(0,0,0),(1,0,0)));
  -- Test
  for i in Ficha_3'range loop
    begin
      rotar_matriz_derecha_90(Ficha_3(i));
      if Ficha_3(i) = Ficha_3_R(i) then
        green; Put("V"); v:=v+1;
      else 
        red; Put("X"); x:=x+1;
      end if;
    exception
      when Error: Program_Error => red; Put("E"); x:=x+1;
      when Error: others => red; Put(Exception_Information(Error)); x:=x+1;
    end;
  end loop;
  -- Finish
  white; New_Line;

  ---------------------
  -- filas_correctas --
  ---------------------
  Put("Filas Correctas: ");
  -- Casos de prueba
  T_Puzle_4 := (((1,6,9,2,5,8,4,3,7),(5,7,8,4,9,3,6,2,1),(3,4,4,7,6,1,9,5,8),(9,5,2,1,8,4,7,6,3),(6,1,3,5,7,9,2,8,4),(4,8,7,6,3,2,5,1,9),(8,3,6,9,4,5,0,0,0),(7,9,1,8,2,6,0,0,0),(2,4,5,3,1,7,0,0,0)),((5,3,4,6,7,8,0,0,0),(6,7,2,1,9,5,0,0,0),(1,9,8,3,4,2,0,0,0),(8,5,9,7,6,1,4,2,3),(4,2,6,8,5,3,7,9,1),(7,1,3,9,2,4,8,5,6),(9,6,1,5,3,7,2,8,4),(2,8,7,4,1,9,6,3,5),(3,4,5,2,8,6,1,7,9)),((0,0,0,7,3,8,4,1,5),(0,0,0,4,2,5,6,9,8),(0,0,0,6,1,9,3,2,7),(2,7,4,5,6,1,8,3,9),(1,8,5,9,7,3,2,4,6),(9,3,6,2,8,4,5,7,1),(7,2,1,3,5,6,9,8,4),(8,5,9,1,4,2,7,6,3),(4,6,3,8,9,7,1,5,2)),((2,8,1,5,7,4,9,3,6),(3,9,4,8,6,2,7,1,5),(6,5,7,3,1,9,4,8,2),(7,1,3,0,0,0,2,6,9),(8,6,5,0,0,0,3,4,1),(9,4,2,0,0,0,8,5,7),(4,7,9,1,5,8,6,2,3),(5,3,8,9,2,6,1,7,4),(1,2,6,7,4,3,5,9,8)));
  Ficha_4 := (((8,3,1),(9,4,7),(6,5,2)),((9,1,2),(3,4,8),(5,6,7)),((2,7,8),(9,1,4),(6,3,5)),((1,3,6),(7,9,2),(5,8,4)));
  Int_4 := (7,1,1,4); -- Fila
  Int_4_1 := (7,7,1,4); -- Columna
  Bool_4_R := (false,true,false,false);
  -- Test
  for i in T_Puzle_4'range loop
    begin
      bool_v1 := filas_correctas(T_Puzle_4(i), Ficha_4(i), Int_4(i), Int_4_1(i));
      if bool_v1 = Bool_4_R(i) then
        green; Put("V"); v:=v+1;
      else 
        red; Put("X"); x:=x+1;
        --Put(int_v1,2); Put(int_v2,2);
      end if;
    exception
      when Error: Program_Error => red; Put("E"); x:=x+1;
      when Error: others => red; Put(Exception_Information(Error)); x:=x+1;
    end;
  end loop;
  -- Finish
  white; New_Line;

  end_credits(v,x);

exception
  when Error: others => red; Put_Line(Exception_Information(Error));
  Put("No ha sido posible finalizar el test. Abortando...");
END lab07_pruebas;
